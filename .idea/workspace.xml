<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="35e7f7f8-a202-4722-8a84-2721d36af2e7" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/dags/mnist_classifier_dag.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/model/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/model/utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/plugins/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/plugins/operators/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/templates/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mnist_classifier/templates/sagemaker_train_config.json.jinja" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/plugins/operators/test_render_templates_operator.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/src/mnist_classifier/model/test_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/templates/fixtures/templates_fixture.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env.template" beforeDir="false" afterPath="$PROJECT_DIR$/.env.template" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/airlfow-sagemaker-mnist.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/airlfow-sagemaker-mnist.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dags/mnist_classifier.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/requirements-dev.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements-dev.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/helpers/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/helpers/common.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mnist_classifier/operators/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/dags/conftest.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/dags/conftest.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/dags/contents/mnist.pkl.gz" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/dags/test_mnist_classifier.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/dags/test_mnist_classifier.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/tests/dags/test_mnist_classifier.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/requirements-dev.txt" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/dags/mnist_classifier_dag.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/.flake8" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/.gitignore" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Bezdx9dCWgl7LKmLh44ehfy1Su" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="credentialsType com.jetbrains.python.remote.PyCreateRemoteInterpreterDialog$PyCreateRemoteSdkForm" value="Docker Compose" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="Docker" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/tmp" />
      <recent name="$PROJECT_DIR$/tests/dags/contents" />
      <recent name="$PROJECT_DIR$/tests/dags" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/mnist_classifier" />
      <recent name="$PROJECT_DIR$/tests/dags/contents" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment (4)">
    <configuration name="Unnamed (1)" type="PyRemoteDebugConfigurationType" factoryName="Python Remote Debug" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="PORT" value="8083" />
      <option name="HOST" value="213.134.190.64" />
      <PathMappingSettings>
        <option name="pathMappings">
          <list>
            <mapping local-root="$PROJECT_DIR$/dags" remote-root="/opt/airflow/dags" />
          </list>
        </option>
      </PathMappingSettings>
      <option name="REDIRECT_OUTPUT" value="true" />
      <option name="SUSPEND_AFTER_CONNECT" value="true" />
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="PyRemoteDebugConfigurationType" factoryName="Python Remote Debug" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="PORT" value="8793" />
      <option name="HOST" value="localhost" />
      <PathMappingSettings>
        <option name="pathMappings">
          <list />
        </option>
      </PathMappingSettings>
      <option name="REDIRECT_OUTPUT" value="true" />
      <option name="SUSPEND_AFTER_CONNECT" value="true" />
      <method v="2" />
    </configuration>
    <configuration name="airflow debug" type="PyRemoteDebugConfigurationType" factoryName="Python Remote Debug">
      <module name="airlfow-sagemaker-mnist" />
      <option name="PORT" value="8082" />
      <option name="HOST" value="213.134.190.64" />
      <PathMappingSettings>
        <option name="pathMappings">
          <list />
        </option>
      </PathMappingSettings>
      <option name="REDIRECT_OUTPUT" value="true" />
      <option name="SUSPEND_AFTER_CONNECT" value="true" />
      <method v="2" />
    </configuration>
    <configuration name="Remote Dag Debug" type="PythonConfigurationType" factoryName="Python">
      <module name="airlfow-sagemaker-mnist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/dags" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <PathMappingSettings>
        <option name="pathMappings">
          <list>
            <mapping local-root="$PROJECT_DIR$/dags " remote-root="/opt/airflow/dags" />
          </list>
        </option>
      </PathMappingSettings>
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/../../../../../airflow/.local/bin/airflow" />
      <option name="PARAMETERS" value="dags test mnist_classifier_dag 2022-07-13" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="check_aws_connection" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="AWS_ACCESS_KEY_ID" value="AKIA4K76XQTJCR7DAYEM" />
        <env name="AWS_SECRET_ACCESS_KEY" value="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" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tmp" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/tmp/check_aws_connection.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="transform_mnist" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="AWS_ACCESS_KEY_ID" value="AKIAT3NOHSATWVCRN3GK" />
        <env name="AWS_SECRET_ACCESS_KEY" value="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" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tmp" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/tmp/transform_mnist.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment (2)" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="DockerComposev2">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment (3)" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="DockerComposev3">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment (4)" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Dockerv4">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_mnist_classifier.test_dag" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="airlfow-sagemaker-mnist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/dags" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_mnist_classifier.test_dag&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment (2)" />
      <item itemvalue="Python.Remote Dag Debug" />
      <item itemvalue="Python.check_aws_connection" />
      <item itemvalue="Python.main" />
      <item itemvalue="Python.transform_mnist" />
      <item itemvalue="Python Debug Server.Unnamed" />
      <item itemvalue="Python Debug Server.Unnamed (1)" />
      <item itemvalue="Python Debug Server.airflow debug" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment (3)" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment (4)" />
      <item itemvalue="Python tests.Python tests for test_mnist_classifier.test_dag" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment (4)" />
        <item itemvalue="Python tests.Python tests for test_mnist_classifier.test_dag" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment (3)" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment (2)" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="35e7f7f8-a202-4722-8a84-2721d36af2e7" name="Changes" comment="" />
      <created>1657281429914</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1657281429914</updated>
      <workItem from="1657281431037" duration="133000" />
      <workItem from="1657291925793" duration="4020000" />
      <workItem from="1657533513980" duration="14257000" />
      <workItem from="1657569204549" duration="32000" />
      <workItem from="1657607679245" duration="19291000" />
      <workItem from="1657639630545" duration="22894000" />
      <workItem from="1658123695167" duration="27702000" />
      <workItem from="1658151938183" duration="5588000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/check_aws_connection.py</url>
          <line>30</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/check_aws_connection.py</url>
          <line>29</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/download_mnist.py</url>
          <line>4</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/get_mnist_pkl.py</url>
          <line>14</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/get_mnist_pkl.py</url>
          <line>13</line>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/get_mnist_pkl.py</url>
          <line>7</line>
          <option name="timeStamp" value="26" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/transform_mnist.py</url>
          <line>28</line>
          <option name="timeStamp" value="27" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/check_aws_connection.py</url>
          <line>27</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/.venv/lib/python3.8/site-packages/airflow/providers/amazon/aws/hooks/sagemaker.py</url>
          <line>820</line>
          <option name="timeStamp" value="44" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tmp/template_jinja.py</url>
          <line>8</line>
          <option name="timeStamp" value="49" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/.venv/lib/python3.8/site-packages/airflow/models/baseoperator.py</url>
          <line>742</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/templates/fixtures/templates_fixture.py</url>
          <line>34</line>
          <option name="timeStamp" value="72" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/conftest.py</url>
          <line>100</line>
          <option name="timeStamp" value="76" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/conftest.py</url>
          <line>18</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/conftest.py</url>
          <line>17</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/.venv/lib/python3.8/site-packages/botocore/validate.py</url>
          <line>380</line>
          <option name="timeStamp" value="99" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/.venv/lib/python3.8/site-packages/botocore/client.py</url>
          <line>914</line>
          <option name="timeStamp" value="100" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/mnist_classifier/plugins/operators/render_templates_operator.py</url>
          <line>18</line>
          <option name="timeStamp" value="101" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$Remote_Dag_Debug.coverage" NAME="Remote Dag Debug Coverage Results" MODIFIED="1657715806942" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/dags" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$check_aws_connection.coverage" NAME="check_aws_connection Coverage Results" MODIFIED="1657718408084" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$download_mnist.coverage" NAME="download_mnist Coverage Results" MODIFIED="1657610014982" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$run_sagemaker.coverage" NAME="run_sagemaker Coverage Results" MODIFIED="1658125522321" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$template_jinja.coverage" NAME="template_jinja Coverage Results" MODIFIED="1658126340483" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$transform_mnist.coverage" NAME="transform_mnist Coverage Results" MODIFIED="1657715449194" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$get_mnist_pkl.coverage" NAME="get_mnist_pkl Coverage Results" MODIFIED="1657620497976" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tmp" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$mnist_classifier.coverage" NAME="mnist_classifier Coverage Results" MODIFIED="1657715504460" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/dags" />
    <SUITE FILE_PATH="coverage/airlfow_sagemaker_mnist$.coverage" NAME=" Coverage Results" MODIFIED="1658157288098" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/dags" />
  </component>
</project>